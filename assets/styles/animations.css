/* ============================================
   动画和过渡效果
   ============================================ */

/* ============================================
   页面加载动画
   ============================================ */

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideInDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* 应用加载动画 */
.animate-fade-in {
  animation: fadeIn 0.6s var(--ease-smooth) both;
}

.animate-fade-in-up {
  animation: fadeInUp 0.6s var(--ease-smooth) both;
}

.animate-slide-in-down {
  animation: slideInDown 0.4s var(--ease-smooth) both;
}

.animate-scale-in {
  animation: scaleIn 0.5s var(--ease-smooth) both;
}

/* 延迟类 */
.delay-100 {
  animation-delay: 100ms;
}

.delay-200 {
  animation-delay: 200ms;
}

.delay-300 {
  animation-delay: 300ms;
}

.delay-400 {
  animation-delay: 400ms;
}

.delay-500 {
  animation-delay: 500ms;
}

/* ============================================
   弹窗动画
   ============================================ */

@keyframes modalFadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes modalSlideIn {
  from {
    opacity: 0;
    transform: scale(0.95) translateY(-20px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

@keyframes modalFadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes modalSlideOut {
  from {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
  to {
    opacity: 0;
    transform: scale(0.95) translateY(-20px);
  }
}

.modal-overlay.modal-enter {
  animation: modalFadeIn 0.3s var(--ease-smooth) both;
}

.modal-overlay.modal-exit {
  animation: modalFadeOut 0.2s var(--ease-smooth) both;
}

.modal.modal-enter {
  animation: modalSlideIn 0.3s var(--ease-smooth) both;
}

.modal.modal-exit {
  animation: modalSlideOut 0.2s var(--ease-smooth) both;
}

/* ============================================
   数字递增动画
   ============================================ */

@keyframes countUp {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-count-up {
  animation: countUp 0.6s var(--ease-smooth) both;
}

/* ============================================
   微交互动画
   ============================================ */

/* 按钮点击效果 */
@keyframes buttonPress {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(0.95);
  }
  100% {
    transform: scale(1);
  }
}

.btn:active {
  animation: buttonPress 0.2s var(--ease-smooth);
}

/* 复制成功动画 */
@keyframes copySuccess {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

.copy-success {
  animation: copySuccess 0.3s var(--ease-bounce);
}

/* 标签添加动画 */
@keyframes tagSlideIn {
  from {
    opacity: 0;
    transform: translateX(10px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.tag-enter {
  animation: tagSlideIn 0.2s var(--ease-smooth) both;
}

/* 标签移除动画 */
@keyframes tagSlideOut {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.8);
  }
}

.tag-exit {
  animation: tagSlideOut 0.15s var(--ease-smooth) both;
}

/* ============================================
   悬浮效果
   ============================================ */

.hover-lift {
  transition: transform var(--transition-base) var(--ease-smooth),
              box-shadow var(--transition-base) var(--ease-smooth);
}

.hover-lift:hover {
  transform: translateY(-4px);
}

/* 卡片悬浮时的高亮边框 */
.hover-glow {
  position: relative;
  transition: all var(--transition-base) var(--ease-smooth);
}

.hover-glow::before {
  content: '';
  position: absolute;
  inset: -1px;
  border-radius: inherit;
  background: linear-gradient(
    135deg,
    var(--color-primary),
    var(--color-secondary)
  );
  opacity: 0;
  transition: opacity var(--transition-base) var(--ease-smooth);
  z-index: -1;
}

.hover-glow:hover::before {
  opacity: 0.2;
}

/* ============================================
   装饰性动画
   ============================================ */

/* 渐变背景动画 */
@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.gradient-animate {
  background-size: 200% 200%;
  animation: gradientShift 8s ease infinite;
}

/* 漂浮动画 */
@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}

/* 脉冲动画 */
@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* 闪烁动画 */
@keyframes blink {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}

.animate-blink {
  animation: blink 1s step-start infinite;
}

/* ============================================
   骨架屏加载动画
   ============================================ */

@keyframes shimmer {
  0% {
    background-position: -1000px 0;
  }
  100% {
    background-position: 1000px 0;
  }
}

.skeleton {
  background: linear-gradient(
    90deg,
    var(--color-bg-secondary) 0%,
    var(--color-bg-tertiary) 50%,
    var(--color-bg-secondary) 100%
  );
  background-size: 1000px 100%;
  animation: shimmer 2s infinite linear;
  border-radius: var(--radius-md);
}

.skeleton-text {
  height: 1rem;
  margin-bottom: var(--spacing-sm);
}

.skeleton-title {
  height: 1.5rem;
  width: 60%;
  margin-bottom: var(--spacing-md);
}

.skeleton-card {
  height: 200px;
  border-radius: var(--radius-lg);
}

/* ============================================
   进度条动画
   ============================================ */

@keyframes progress {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

.progress-bar {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 3px;
  background: transparent;
  z-index: 9999;
  overflow: hidden;
}

.progress-bar::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 50%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    var(--color-primary),
    transparent
  );
  animation: progress 1.5s ease-in-out infinite;
}

/* ============================================
   淡入视口动画（Intersection Observer 触发）
   ============================================ */

.fade-in-on-scroll {
  opacity: 0;
  transform: translateY(30px);
  transition: opacity 0.6s var(--ease-smooth),
              transform 0.6s var(--ease-smooth);
}

.fade-in-on-scroll.visible {
  opacity: 1;
  transform: translateY(0);
}

/* ============================================
   过渡组
   ============================================ */

.transition-all {
  transition: all var(--transition-base) var(--ease-smooth);
}

.transition-colors {
  transition: color var(--transition-base) var(--ease-smooth),
              background-color var(--transition-base) var(--ease-smooth),
              border-color var(--transition-base) var(--ease-smooth);
}

.transition-transform {
  transition: transform var(--transition-base) var(--ease-smooth);
}

.transition-opacity {
  transition: opacity var(--transition-base) var(--ease-smooth);
}

/* ============================================
   响应式动画（减少动画）
   ============================================ */

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
  
  .animate-fade-in,
  .animate-fade-in-up,
  .animate-slide-in-down,
  .animate-scale-in,
  .animate-float,
  .animate-pulse,
  .skeleton {
    animation: none;
  }
  
  .fade-in-on-scroll {
    opacity: 1;
    transform: none;
  }
}
